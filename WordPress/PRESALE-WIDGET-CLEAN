<!-- WALDO Presale Widget - Clean Working Version -->
<div style="background:#0d2818; padding: 30px; border-radius: 15px; border: 2px solid #25c2a0; max-width: 600px; margin: 20px auto;">

  <h1 style="color: #25c2a0; text-align: center; margin: 0 0 20px 0;">üöÄ WALDO PRESALE</h1>

  <!-- Step 1: Connect Wallet -->
  <div id="step1-connect">
    <h3 style="color: #ffea00; text-align: center;">Step 1: Connect Your Wallet</h3>
    
    <div style="text-align: center; margin: 20px 0;">
      <div id="qrPlaceholder" style="display: flex; align-items: center; justify-content: center; min-height: 200px; background: #0f2d17; border: 2px dashed #25c2a0; border-radius: 10px; color: #25c2a0; font-weight: bold;">
        Loading QR Code...
      </div>
      <img id="xummQR" style="display: none; max-width: 100%; border-radius: 10px; margin: 10px 0;" />
      <a id="xummDeepLink" style="display: none; color: #25c2a0; font-weight: bold; margin-top: 10px; display: block;" target="_blank">üì± Open in XAMAN App</a>
    </div>
    
    <div style="background: #0f2d17; padding: 10px; border-radius: 8px; margin: 15px 0;">
      <div style="color: #25c2a0; font-size: 12px; font-weight: bold;">Wallet Status</div>
      <div style="color: white; font-size: 11px;">
        Connected: <span id="connectedWallet">Not connected</span><br>
        Status: <span id="connectionStatus">Generating QR...</span>
      </div>
    </div>
  </div>

  <!-- Step 2: Trustline -->
  <div id="step2-trustline" style="display: none;">
    <h3 style="color: #ffea00; text-align: center;">Step 2: Add WALDO Trustline</h3>
    <p style="color: white; text-align: center;">You need to add a trustline to receive WALDO tokens</p>
    
    <div style="text-align: center; margin: 20px 0;">
      <button onclick="addTrustlineAndWait()" style="background: #ffd93d; color: black; border: none; padding: 12px 20px; border-radius: 8px; font-weight: bold; cursor: pointer; width: 100%;">üì≤ Add Trustline in XAMAN</button>
      <button onclick="recheckTrustline()" style="background: #25c2a0; color: white; border: none; padding: 12px 20px; border-radius: 8px; font-weight: bold; cursor: pointer; width: 100%; margin-top: 10px;">üîÑ I've Added the Trustline</button>
    </div>
    
    <div id="trustline-status" style="display: none; background: #0f2d17; padding: 10px; border-radius: 8px; color: white; text-align: center;">
      Checking trustline...
    </div>
  </div>

  <!-- Step 3: Purchase -->
  <div id="step3-purchase" style="display: none;">
    <h3 style="color: #ffea00; text-align: center;">Step 3: Purchase WALDO</h3>
    
    <div style="margin: 20px 0;">
      <div style="display: grid; grid-template-columns: repeat(auto-fit, minmax(80px, 1fr)); gap: 8px;">
        <button onclick="selectAmount(5)" style="background: #1a4d2e; color: white; border: 2px solid #25c2a0; padding: 10px; border-radius: 8px; cursor: pointer; font-weight: bold;">5 XRP</button>
        <button onclick="selectAmount(10)" style="background: #1a4d2e; color: white; border: 2px solid #25c2a0; padding: 10px; border-radius: 8px; cursor: pointer; font-weight: bold;">10 XRP</button>
        <button onclick="selectAmount(25)" style="background: #1a4d2e; color: white; border: 2px solid #25c2a0; padding: 10px; border-radius: 8px; cursor: pointer; font-weight: bold;">25 XRP</button>
        <button onclick="selectAmount(50)" style="background: #1a4d2e; color: white; border: 2px solid #25c2a0; padding: 10px; border-radius: 8px; cursor: pointer; font-weight: bold;">50 XRP</button>
        <button onclick="selectAmount(80)" style="background: #1a4d2e; color: white; border: 2px solid #ffd93d; padding: 10px; border-radius: 8px; cursor: pointer; font-weight: bold;">80 XRP<br><small>+15% BONUS</small></button>
        <button onclick="selectAmount(100)" style="background: #1a4d2e; color: white; border: 2px solid #ff6b6b; padding: 10px; border-radius: 8px; cursor: pointer; font-weight: bold;">100 XRP<br><small>+30% BONUS</small></button>
      </div>
    </div>
    
    <div id="purchaseSummary" style="display: none; background: #0f2d17; padding: 15px; border-radius: 10px; margin: 15px 0;">
      <div style="color: #25c2a0; font-weight: bold; margin-bottom: 10px;">Purchase Summary</div>
      <div id="summaryText" style="color: white; font-size: 12px;"></div>
    </div>
    
    <button id="purchaseBtn" onclick="purchaseWaldo()" disabled style="width: 100%; background: #25c2a0; color: white; border: none; padding: 15px; border-radius: 10px; font-weight: bold; cursor: pointer; opacity: 0.5;">üîê Select Amount to Purchase</button>
  </div>
</div>

<script>
let selectedAmount = 0;
let connectedWallet = null;
let hasTrustline = false;

function showStep(stepNumber) {
    document.getElementById('step1-connect').style.display = stepNumber === 1 ? 'block' : 'none';
    document.getElementById('step2-trustline').style.display = stepNumber === 2 ? 'block' : 'none';
    document.getElementById('step3-purchase').style.display = stepNumber === 3 ? 'block' : 'none';
}

async function connectXummWallet() {
    try {
        document.getElementById('qrPlaceholder').innerText = 'Loading QR...';
        document.getElementById('xummQR').style.display = 'none';

        const response = await fetch('https://waldocoin-backend-api.onrender.com/api/login');
        const data = await response.json();

        if (data.qr && data.uuid) {
            document.getElementById('xummQR').src = data.qr;
            document.getElementById('xummQR').style.display = 'block';
            document.getElementById('qrPlaceholder').style.display = 'none';

            if (data.next && data.next.always) {
                document.getElementById('xummDeepLink').href = data.next.always;
                document.getElementById('xummDeepLink').style.display = 'block';
            }

            pollForConnection(data.uuid);
        }
    } catch (error) {
        document.getElementById('qrPlaceholder').innerHTML = 'Failed to load<br><button onclick="connectXummWallet()" style="background: #25c2a0; color: white; border: none; padding: 5px 10px; border-radius: 5px; cursor: pointer;">Try Again</button>';
    }
}

function pollForConnection(uuid) {
    const pollInterval = setInterval(async () => {
        try {
            const response = await fetch('https://waldocoin-backend-api.onrender.com/api/login/status?uuid=' + uuid);
            const data = await response.json();

            if (data.signed) {
                clearInterval(pollInterval);
                connectedWallet = data.account;

                document.getElementById('connectedWallet').innerText = connectedWallet;
                document.getElementById('connectionStatus').innerText = 'Connected!';
                document.getElementById('connectionStatus').style.color = '#25c2a0';

                checkTrustlineAndProceed();
            }
        } catch (error) {
            console.error('Polling error:', error);
        }
    }, 2000);
}

async function checkTrustlineAndProceed() {
    try {
        const hasWaldoTrustline = await checkTrustlineDirectXRPL(connectedWallet);
        
        if (hasWaldoTrustline) {
            hasTrustline = true;
            showStep(3);
        } else {
            showStep(2);
        }
    } catch (error) {
        showStep(2);
    }
}

async function checkTrustlineDirectXRPL(wallet) {
    const servers = ['https://xrplcluster.com', 'https://s1.ripple.com:51234'];
    
    for (const server of servers) {
        try {
            const response = await fetch(server, {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({
                    method: 'account_lines',
                    params: [{
                        account: wallet,
                        ledger_index: 'validated'
                    }]
                })
            });

            const data = await response.json();
            if (data.result && data.result.lines) {
                const waldoTrustline = data.result.lines.find(line =>
                    line.account === 'rstjAWDiqKsUMhHqiJShRSkuaZ44TXZyDY' && line.currency === 'WLO'
                );
                return !!waldoTrustline;
            }
        } catch (error) {
            continue;
        }
    }
    return false;
}

function addTrustlineAndWait() {
    window.open('https://xumm.app/detect/xumm:trustline?issuer=rstjAWDiqKsUMhHqiJShRSkuaZ44TXZyDY&currency=WLO', '_blank');
    document.getElementById('trustline-status').style.display = 'block';
    document.getElementById('trustline-status').innerText = 'Add the trustline in XAMAN, then click "I\'ve Added the Trustline"';
}

async function recheckTrustline() {
    document.getElementById('trustline-status').innerText = 'Checking...';
    const hasWaldoTrustline = await checkTrustlineDirectXRPL(connectedWallet);
    
    if (hasWaldoTrustline) {
        hasTrustline = true;
        showStep(3);
    } else {
        document.getElementById('trustline-status').innerText = 'Trustline not found. Please add it first.';
    }
}

function selectAmount(amount) {
    selectedAmount = amount;
    
    // Update button styles
    document.querySelectorAll('button[onclick^="selectAmount"]').forEach(btn => {
        btn.style.background = '#1a4d2e';
    });
    event.target.style.background = '#25c2a0';
    
    // Calculate WALDO amount
    let waldoAmount = amount * 100000; // Base rate
    let bonus = 0;
    
    if (amount >= 80) bonus = 15;
    if (amount >= 90) bonus = 22;
    if (amount >= 100) bonus = 30;
    
    if (bonus > 0) {
        waldoAmount = waldoAmount * (1 + bonus / 100);
    }
    
    // Show summary
    document.getElementById('summaryText').innerHTML = 
        'XRP Amount: ' + amount + ' XRP<br>' +
        'WALDO Amount: ' + waldoAmount.toLocaleString() + ' WALDO' +
        (bonus > 0 ? '<br>Bonus: +' + bonus + '%' : '');
    
    document.getElementById('purchaseSummary').style.display = 'block';
    document.getElementById('purchaseBtn').disabled = false;
    document.getElementById('purchaseBtn').style.opacity = '1';
    document.getElementById('purchaseBtn').innerText = 'üîê Buy ' + waldoAmount.toLocaleString() + ' WALDO';
}

async function purchaseWaldo() {
    if (!selectedAmount || !connectedWallet) return;
    
    try {
        document.getElementById('purchaseBtn').innerText = 'Creating transaction...';
        document.getElementById('purchaseBtn').disabled = true;
        
        const response = await fetch('https://waldocoin-backend-api.onrender.com/api/presale/buy', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({
                wallet: connectedWallet,
                xrpAmount: selectedAmount
            })
        });
        
        const data = await response.json();
        
        if (data.success && data.deeplink) {
            document.getElementById('purchaseBtn').innerText = '‚úÖ Check XUMM App';
            window.open(data.deeplink, '_blank');
            
            if (data.uuid) {
                pollTransactionStatus(data.uuid);
            }
        } else {
            throw new Error('Purchase failed');
        }
    } catch (error) {
        document.getElementById('purchaseBtn').innerText = '‚ùå Purchase Failed';
        document.getElementById('purchaseBtn').disabled = false;
        setTimeout(() => {
            document.getElementById('purchaseBtn').innerText = 'üîê Try Again';
        }, 3000);
    }
}

function pollTransactionStatus(uuid) {
    const pollInterval = setInterval(async () => {
        try {
            const response = await fetch('https://waldocoin-backend-api.onrender.com/api/presale/status/' + uuid);
            const data = await response.json();
            
            if (data.completed) {
                clearInterval(pollInterval);
                window.location.href = 'https://waldocoin.live/presale-success/';
            }
        } catch (error) {
            console.error('Status polling error:', error);
        }
    }, 3000);
}

function disconnectWallet() {
    connectedWallet = null;
    hasTrustline = false;
    selectedAmount = 0;
    showStep(1);
    connectXummWallet();
}

// Initialize
document.addEventListener('DOMContentLoaded', function() {
    showStep(1);
    connectXummWallet();
});
</script>
