<!-- üöÄ WALDO Airdrop -->
<div class="airdrop-box" style="background:#111; border:2px solid red; padding:30px; border-radius:18px; max-width:500px; margin:auto; color:white; font-family:'Arial Black', sans-serif; text-align:center;">

  <h2 style="color:#ffea00;">üéÅ WALDO Airdrop (Trustline Must be Set)</h2>
  <p style="font-size:14px;">Enter the secret password from our Telegram to auto-claim <b>50,000 WALDO</b>.</p>

  <!-- Airdrop Status -->
  <div id="airdropStatus" style="background:#222; padding:10px; border-radius:8px; margin:10px 0; font-size:12px;">
    <div style="color:#25c2a0;">üìä Loading airdrop status...</div>
  </div>

  <!-- Password -->
  <input type="password" id="airdropPassword" placeholder="Enter Password" oninput="handlePassword()" style="padding:10px; width:80%; border-radius:8px; border:none; margin-top:15px;" />

  <!-- Wallet info -->
  <p id="walletStatus" style="color:#ff0; font-size:13px; margin-top:10px;">Connect Wallet: Connecting...</p>

  <!-- QR Code for XUMM -->
  <div id="xummLoginBox" style="margin-top:10px;">
    <img id="xummQR" src="" style="width:100px; display:none; border:2px solid #ccc; border-radius:12px;" />
    <div id="xummQRLabel" style="display:none; font-size:13px; color:cyan;">Scan with XUMM Wallet</div>
    <div id="xummMobileLink" style="display:none; margin-top:6px;">
      <a id="xummDeepLink" href="#" style="color:cyan;">üì≤ Tap here to open in XUMM</a>
    </div>
  </div>

  <!-- Result -->
  <p id="airdropResult" style="color:#0f0; font-weight:bold; margin-top:15px;"></p>
</div>

<script>
let walletReady = false;
let currentWallet = null;

// üöÄ Connect wallet on page load
window.addEventListener("DOMContentLoaded", () => {
  connectXummWallet();
  loadAirdropStatus();
});

async function connectXummWallet() {
  try {
    const res = await fetch("https://waldocoin-backend-api.onrender.com/api/login");
    const data = await res.json();

    if (!data.qr || !data.uuid) throw new Error("Missing QR/UUID");

    // Show QR
    document.getElementById("xummQR").src = data.qr;
    document.getElementById("xummQR").style.display = "block";
    document.getElementById("xummQRLabel").style.display = "block";

    // Show mobile deep link
    if (/Mobi|Android|iPhone/i.test(navigator.userAgent) && data.refs?.xapp) {
      document.getElementById("xummDeepLink").href = data.refs.xapp;
      document.getElementById("xummMobileLink").style.display = "block";
    }

    // Poll login status
    const interval = setInterval(async () => {
      const status = await fetch(`https://waldocoin-backend-api.onrender.com/api/login/status?uuid=${data.uuid}`).then(r => r.json());

      if (status?.signed && status?.account) {
        clearInterval(interval);
        currentWallet = status.account;
        walletReady = true;
        document.getElementById("walletStatus").innerText = `Wallet: ${currentWallet}`;

        // Check if wallet already claimed before allowing claim
        await checkWalletStatus();

        // Only try auto-claim if wallet hasn't claimed yet
        if (!document.getElementById("airdropPassword").disabled) {
          tryAutoClaim();
        }
      }
    }, 2000);
  } catch (err) {
    document.getElementById("walletStatus").innerText = "‚ùå Wallet connect failed.";
    console.error("XUMM connect error:", err);
  }
}

// üîê Handle password input
function handlePassword() {
  const pw = document.getElementById("airdropPassword").value.trim();
  if (pw.length >= 9 && walletReady) tryAutoClaim();
}

// üéØ Main claim function
let alreadyTried = false;
async function tryAutoClaim() {
  if (alreadyTried) return;

  const pw = document.getElementById("airdropPassword").value.trim();
  if (!pw || !walletReady || !currentWallet) return;

  alreadyTried = true;

  try {
    const res = await fetch("https://waldocoin-backend-api.onrender.com/api/airdrop", {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({ wallet: currentWallet, password: pw })
    });

    const data = await res.json();
    const result = document.getElementById("airdropResult");

    if (data.success) {
      result.style.color = "#0f0";
      result.innerText = "‚úÖ WALDO airdrop claimed!";
    } else {
      result.style.color = "red";
      result.innerText = `‚ùå ${data.error || "Claim failed"}`;
    }
  } catch (err) {
    console.error("Claim error:", err);
    document.getElementById("airdropResult").innerText = "‚ùå Server error during claim.";
  }
}

// üìä Load airdrop status
async function loadAirdropStatus() {
  try {
    const res = await fetch("https://waldocoin-backend-api.onrender.com/api/airdrop/status");
    const data = await res.json();

    const statusDiv = document.getElementById("airdropStatus");

    if (data.success) {
      const airdrop = data.airdrop;
      const statusColor = airdrop.isActive ? "#25c2a0" : "#e74c3c";
      const statusText = airdrop.isActive ? "ACTIVE" : "ENDED";

      statusDiv.innerHTML = `
        <div style="color:${statusColor}; font-weight:bold;">
          üìä Airdrop Status: ${statusText}
        </div>
        <div style="color:#ccc; margin-top:5px;">
          ${airdrop.totalClaimed}/${airdrop.totalLimit} claimed ‚Ä¢ ${airdrop.remaining} remaining
        </div>
        ${!airdrop.isActive ? '<div style="color:#ff6b6b; margin-top:5px;">‚ö†Ô∏è Airdrop has ended</div>' : ''}
      `;

      // Disable form if airdrop ended
      if (!airdrop.isActive) {
        document.getElementById("airdropPassword").disabled = true;
        document.getElementById("airdropPassword").placeholder = "Airdrop has ended";
      }
    } else {
      statusDiv.innerHTML = '<div style="color:#ff6b6b;">‚ùå Could not load airdrop status</div>';
    }
  } catch (error) {
    console.error("Error loading airdrop status:", error);
    document.getElementById("airdropStatus").innerHTML = '<div style="color:#ff6b6b;">‚ùå Error loading status</div>';
  }
}

// üîç Check if current wallet has already claimed
async function checkWalletStatus() {
  if (!currentWallet) return;

  try {
    const res = await fetch(`https://waldocoin-backend-api.onrender.com/api/airdrop/check/${currentWallet}`);
    const data = await res.json();

    if (data.success && data.hasClaimed) {
      document.getElementById("airdropResult").style.color = "#ffd93d";
      document.getElementById("airdropResult").innerText = "‚ö†Ô∏è This wallet has already claimed the airdrop";
      document.getElementById("airdropPassword").disabled = true;
      document.getElementById("airdropPassword").placeholder = "Already claimed";
    }
  } catch (error) {
    console.error("Error checking wallet status:", error);
  }
}
</script>


