<!-- 🚀 WALDO Airdrop -->
<div class="airdrop-box" style="background:#111; border:2px solid red; padding:20px; border-radius:18px; max-width:500px; margin:10px auto; color:white; font-family:'Arial Black', sans-serif; text-align:center;">

<style>
@media (max-width: 600px) {
  .airdrop-box {
    margin: 5px !important;
    padding: 15px !important;
    border-radius: 12px !important;
  }
  .airdrop-box input {
    width: 90% !important;
    font-size: 16px !important; /* Prevents zoom on iOS */
  }
  .airdrop-box a, .airdrop-box button {
    padding: 10px 16px !important;
    font-size: 14px !important;
  }
}
</style>

  <h2 style="color:#ffea00;">🎁 WALDO Airdrop</h2>
  <p style="font-size:14px;">Enter the secret password from our Telegram to auto-claim <b>50,000 WALDO</b>.</p>
  <p style="font-size:12px; color:#ffd93d; margin-top:5px;">🔄 <strong>Password changes daily</strong> - Get the latest password from our Telegram channel!</p>
  <p style="font-size:11px; color:#25c2a0; margin-top:3px;">💡 Current password: <strong>WALDOCREW</strong> (valid until next update)</p>

  <!-- Airdrop Status -->
  <div id="airdropStatus" style="background:#222; padding:10px; border-radius:8px; margin:10px 0; font-size:12px;">
    <div style="color:#25c2a0;">📊 Loading airdrop status...</div>
  </div>

  <!-- STEP 1: Connect Wallet -->
  <div style="background:#222; padding:15px; border-radius:8px; margin:10px 0; border:1px solid #444;">
    <div style="color:#ffd93d; font-weight:bold; margin-bottom:8px;">⚠️ STEP 1: CONNECT WALLET</div>
    <div style="text-align:center;">
      <button id="connectWalletBtn" onclick="showXummQR()" style="display:inline-block; background:#25c2a0; color:white; padding:12px 20px; border:none; border-radius:8px; font-weight:bold; cursor:pointer; margin:5px;">
        📱 Connect Xaman Wallet
      </button>
      <p id="walletStatus" style="color:#ccc; font-size:12px; margin-top:8px;">Click button to connect your wallet</p>
    </div>
  </div>

  <!-- STEP 2: Trustline Instructions -->
  <div style="background:#222; padding:15px; border-radius:8px; margin:10px 0; border:1px solid #444;">
    <div style="color:#ffd93d; font-weight:bold; margin-bottom:8px;">⚠️ STEP 2: SET TRUSTLINE</div>
    <p style="font-size:12px; color:#ccc; margin-bottom:10px;">
      <strong>You must set the WALDO trustline in your Xaman wallet.</strong>
    </p>

    <div style="text-align:center;">
      <!-- Mobile: Direct Link -->
      <div id="trustlineMobile" style="display:none;">
        <a href="https://xrpl.services/?issuer=rstjAWDiqKsUMhHqiJShRSkuaZ44TXZyDY&currency=WLO&limit=1000000000"
           target="_blank"
           style="display:inline-block; background:#25c2a0; color:white; padding:12px 20px; border-radius:8px; text-decoration:none; font-weight:bold; margin:5px;">
          📲 Set WALDO Trustline
        </a>
        <div style="font-size:10px; color:#666; margin-top:8px;">
          Tap to open Xaman and add WALDO token<br>
          Currency: <strong>WLO</strong> | Issuer: rstjAWD...TXZyDY
        </div>
      </div>

      <!-- Desktop: Direct Link (same as mobile) -->
      <div id="trustlineDesktop" style="display:none;">
        <a href="https://xrpl.services/?issuer=rstjAWDiqKsUMhHqiJShRSkuaZ44TXZyDY&currency=WLO&limit=1000000000"
           target="_blank"
           style="display:inline-block; background:#25c2a0; color:white; padding:12px 20px; border-radius:8px; text-decoration:none; font-weight:bold; margin:5px;">
          🔗 Set WALDO Trustline
        </a>
        <div style="font-size:10px; color:#666; margin-top:8px;">
          Click to open XRPL Services and set trustline<br>
          Currency: <strong>WLO</strong> | Issuer: rstjAWD...TXZyDY
        </div>
      </div>
    </div>
  </div>

  <!-- STEP 3: Password Section -->
  <div style="background:#222; padding:15px; border-radius:8px; margin:10px 0; border:1px solid #444;">
    <div style="color:#ffd93d; font-weight:bold; margin-bottom:8px;">⚠️ STEP 3: ENTER PASSWORD & CLAIM</div>
    <div style="text-align:center;">
      <input type="password" id="airdropPassword" placeholder="Enter daily password from Telegram" oninput="handlePassword()" style="padding:10px; width:80%; border-radius:8px; border:none; margin-bottom:8px;" />
      <div style="font-size:11px; color:#666; margin-bottom:10px;">💡 Password changes daily - check Telegram for today's password</div>

      <!-- Claim Button -->
      <button id="claimButton" onclick="tryAutoClaim()" style="padding:10px 20px; background:#25c2a0; color:white; border:none; border-radius:8px; font-weight:bold; cursor:pointer; display:none;">
        🎁 Claim 50,000 WALDO
      </button>
    </div>
  </div>

  <!-- Result -->
  <p id="airdropResult" style="color:#0f0; font-weight:bold; margin-top:15px;"></p>

  <!-- QR Code Popup -->
  <div id="qrPopup" style="display:none; position:fixed; top:0; left:0; width:100%; height:100%; background:rgba(0,0,0,0.8); z-index:1000;">
    <div style="position:absolute; top:50%; left:50%; transform:translate(-50%,-50%); background:#222; padding:30px; border-radius:12px; text-align:center; border:2px solid #444; max-width:90%; width:400px;">
      <div style="color:#25c2a0; font-weight:bold; margin-bottom:15px; font-size:16px;">📱 Connect Xaman Wallet</div>

      <div id="xummLoginBox">
        <!-- Mobile: Show direct link prominently -->
        <div id="mobileView" style="display:none; margin-bottom:15px;">
          <a id="xummDeepLink" href="#" style="display:inline-block; background:#25c2a0; color:white; padding:12px 20px; border-radius:8px; text-decoration:none; font-weight:bold; margin-bottom:10px;">
            📲 Open in Xaman App
          </a>
          <div style="font-size:11px; color:#666;">Tap to open directly in Xaman wallet</div>

          <!-- QR as backup option for mobile -->
          <div style="margin-top:15px; padding-top:15px; border-top:1px solid #444;">
            <div style="font-size:11px; color:#666; margin-bottom:8px;">Or scan QR code:</div>
            <img id="xummQRMobile" src="" style="width:100px; border:2px solid #ccc; border-radius:6px;" />
          </div>
        </div>

        <!-- Desktop: Show QR code prominently -->
        <div id="desktopView" style="display:none; margin-bottom:15px;">
          <div style="margin-bottom:15px;">
            <div style="font-size:14px; color:#ccc; margin-bottom:10px;">Scan QR code with Xaman wallet:</div>
            <img id="xummQRDesktop" src="" style="width:150px; border:2px solid #ccc; border-radius:8px;" />
          </div>

          <!-- Direct link as backup for desktop -->
          <div style="margin-top:15px; padding-top:15px; border-top:1px solid #444;">
            <div style="font-size:11px; color:#666; margin-bottom:8px;">Or use direct link:</div>
            <a id="xummDeepLinkDesktop" href="#" style="color:#25c2a0; text-decoration:underline; font-size:12px;">
              🔗 Open in Xaman App
            </a>
          </div>
        </div>
      </div>

      <button onclick="closeXummQR()" style="padding:8px 16px; background:#666; color:white; border:none; border-radius:6px; cursor:pointer;">
        ✕ Close
      </button>
    </div>
  </div>
</div>

<script>
let walletReady = false;
let currentWallet = null;
let alreadyTried = false;

// 🚀 Initialize on page load
window.addEventListener("DOMContentLoaded", () => {
  loadAirdropStatus();
  detectDeviceAndShowTrustline();
});

// 📱 Detect device and show appropriate trustline option
function detectDeviceAndShowTrustline() {
  const isMobile = /Mobi|Android|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);

  const mobileView = document.getElementById("trustlineMobile");
  const desktopView = document.getElementById("trustlineDesktop");

  if (mobileView && desktopView) {
    if (isMobile) {
      mobileView.style.display = "block";
      desktopView.style.display = "none";
    } else {
      mobileView.style.display = "none";
      desktopView.style.display = "block";
    }
  }
}

// 🔗 Show XUMM QR popup with device detection
function showXummQR() {
  document.getElementById("qrPopup").style.display = "block";

  // Detect device type
  const isMobile = /Mobi|Android|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);

  if (isMobile) {
    document.getElementById("mobileView").style.display = "block";
    document.getElementById("desktopView").style.display = "none";
  } else {
    document.getElementById("mobileView").style.display = "none";
    document.getElementById("desktopView").style.display = "block";
  }

  connectXummWallet();
}

// ✕ Close XUMM QR popup
function closeXummQR() {
  document.getElementById("qrPopup").style.display = "none";
}

// 📱 Connect to XUMM wallet
async function connectXummWallet() {
  try {
    const res = await fetch("https://waldocoin-backend-api.onrender.com/api/login");
    const data = await res.json();

    if (!data.qr || !data.uuid) throw new Error("Missing QR/UUID");

    // Show QR in both mobile and desktop views
    const mobileQR = document.getElementById("xummQRMobile");
    const desktopQR = document.getElementById("xummQRDesktop");

    if (mobileQR) mobileQR.src = data.qr;
    if (desktopQR) desktopQR.src = data.qr;

    // Set deep links for both views
    if (data.refs?.xapp) {
      const mobileLink = document.getElementById("xummDeepLink");
      const desktopLink = document.getElementById("xummDeepLinkDesktop");

      if (mobileLink) mobileLink.href = data.refs.xapp;
      if (desktopLink) desktopLink.href = data.refs.xapp;
    }

    // Poll login status
    const interval = setInterval(async () => {
      const status = await fetch(`https://waldocoin-backend-api.onrender.com/api/login/status?uuid=${data.uuid}`).then(r => r.json());

      if (status?.signed && status?.account) {
        clearInterval(interval);
        currentWallet = status.account;
        walletReady = true;

        // Close popup and update UI
        closeXummQR();
        document.getElementById("connectWalletBtn").innerHTML = "✅ Wallet Connected";
        document.getElementById("connectWalletBtn").style.background = "#27ae60";
        document.getElementById("connectWalletBtn").disabled = true;

        document.getElementById("walletStatus").innerText = `✅ Connected: ${currentWallet.slice(0,8)}...${currentWallet.slice(-6)}`;
        document.getElementById("walletStatus").style.color = "#0f0";

        // Check if wallet already claimed before allowing claim
        await checkWalletStatus();

        // Check trustline status
        await checkTrustlineStatus();
      }
    }, 2000);
  } catch (err) {
    document.getElementById("walletStatus").innerText = "❌ Wallet connect failed.";
    console.error("XUMM connect error:", err);
  }
}

// 🔐 Handle password input with better validation
function handlePassword() {
  const pw = document.getElementById("airdropPassword").value.trim();
  const resultDiv = document.getElementById("airdropResult");

  // Clear previous results
  resultDiv.innerHTML = "";

  // Basic validation
  if (pw.length === 0) {
    return;
  }

  if (pw.length < 3) {
    resultDiv.style.color = "#ffd93d";
    resultDiv.innerHTML = "⚠️ Password too short";
    return;
  }

  // Show validation feedback
  if (pw.length >= 3 && pw.length < 8) {
    resultDiv.style.color = "#ffd93d";
    resultDiv.innerHTML = "🔍 Keep typing...";
    return;
  }

  // Ready to attempt claim
  if (pw.length >= 8 && walletReady && !alreadyTried) {
    resultDiv.style.color = "#25c2a0";
    resultDiv.innerHTML = "✅ Password ready - click to claim";

    // Show claim button
    document.getElementById("claimButton").style.display = "inline-block";
  } else {
    // Hide claim button if conditions not met
    document.getElementById("claimButton").style.display = "none";
  }
}

// 🎯 Main claim function
async function tryAutoClaim() {
  if (alreadyTried) return;

  const pw = document.getElementById("airdropPassword").value.trim();
  if (!pw || !walletReady || !currentWallet) return;

  alreadyTried = true;

  // Disable button and show claiming status
  const claimButton = document.getElementById("claimButton");
  const result = document.getElementById("airdropResult");

  claimButton.style.display = "none";
  result.style.color = "#ffd93d";
  result.innerText = "⏳ Claiming airdrop...";

  try {
    const res = await fetch("https://waldocoin-backend-api.onrender.com/api/airdrop", {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({ wallet: currentWallet, password: pw })
    });

    const data = await res.json();

    if (data.success) {
      result.style.color = "#0f0";
      result.innerText = "✅ WALDO airdrop claimed successfully!";

      // Disable password input after successful claim
      document.getElementById("airdropPassword").disabled = true;
      document.getElementById("airdropPassword").placeholder = "Airdrop claimed!";
    } else {
      result.style.color = "red";
      result.innerText = `❌ ${data.error || "Claim failed"}`;

      // Re-enable claiming if it failed (unless wallet already claimed)
      if (!data.error?.includes("already claimed")) {
        alreadyTried = false;
        handlePassword(); // Re-evaluate password to show button if valid
      }
    }
  } catch (err) {
    console.error("Claim error:", err);
    result.innerText = "❌ Server error during claim.";
  }
}

// 📊 Load airdrop status
async function loadAirdropStatus() {
  try {
    const res = await fetch("https://waldocoin-backend-api.onrender.com/api/airdrop/status");
    const data = await res.json();

    const statusDiv = document.getElementById("airdropStatus");

    if (data.success) {
      const airdrop = data.airdrop;
      const statusColor = airdrop.isActive ? "#25c2a0" : "#e74c3c";
      const statusText = airdrop.isActive ? "ACTIVE" : "ENDED";

      statusDiv.innerHTML = `
        <div style="color:${statusColor}; font-weight:bold;">
          📊 Airdrop Status: ${statusText}
        </div>
        <div style="color:#ccc; margin-top:5px;">
          ${airdrop.totalClaimed}/${airdrop.totalLimit} claimed • ${airdrop.remaining} remaining
        </div>
        ${!airdrop.isActive ? '<div style="color:#ff6b6b; margin-top:5px;">⚠️ Airdrop has ended</div>' : ''}
      `;

      // Disable form if airdrop ended
      if (!airdrop.isActive) {
        document.getElementById("airdropPassword").disabled = true;
        document.getElementById("airdropPassword").placeholder = "Airdrop has ended";
      }
    } else {
      statusDiv.innerHTML = '<div style="color:#ff6b6b;">❌ Could not load airdrop status</div>';
    }
  } catch (error) {
    console.error("Error loading airdrop status:", error);
    document.getElementById("airdropStatus").innerHTML = '<div style="color:#ff6b6b;">❌ Error loading status</div>';
  }
}

// 🔍 Check if current wallet has already claimed
async function checkWalletStatus() {
  if (!currentWallet) return;

  try {
    const res = await fetch(`https://waldocoin-backend-api.onrender.com/api/airdrop/check/${currentWallet}`);
    const data = await res.json();

    if (data.success && data.hasClaimed) {
      document.getElementById("airdropResult").style.color = "#ffd93d";
      document.getElementById("airdropResult").innerText = "⚠️ This wallet has already claimed the airdrop";
      document.getElementById("airdropPassword").disabled = true;
      document.getElementById("airdropPassword").placeholder = "Already claimed";
    }
  } catch (error) {
    console.error("Error checking wallet status:", error);
  }
}

// 🔗 Check trustline status
async function checkTrustlineStatus() {
  if (!currentWallet) return;

  const walletStatus = document.getElementById("walletStatus");

  try {
    // Try multiple XRPL servers for reliability
    const servers = [
      'https://xrplcluster.com',
      'https://s1.ripple.com:51234',
      'https://s2.ripple.com:51234'
    ];

    let trustlineFound = false;
    let lastError = null;

    for (const server of servers) {
      try {
        const response = await fetch(server, {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({
            method: 'account_lines',
            params: [{
              account: currentWallet,
              ledger_index: 'validated'
            }]
          })
        });

        const data = await response.json();

        if (data.result && data.result.lines) {
          const waldoTrustline = data.result.lines.find(line =>
            line.account === 'rstjAWDiqKsUMhHqiJShRSkuaZ44TXZyDY' &&
            (line.currency === 'WLO' || line.currency === 'WALDO')
          );

          if (waldoTrustline) {
            walletStatus.innerHTML = `✅ Wallet: ${currentWallet.slice(0,8)}...${currentWallet.slice(-6)} | 🔗 WALDO Trustline: SET`;
            walletStatus.style.color = "#25c2a0";
            trustlineFound = true;
            return; // Success, exit function
          }
        }

        // If we get here, no trustline found but query succeeded
        if (data.result) {
          walletStatus.innerHTML = `⚠️ Wallet: ${currentWallet.slice(0,8)}...${currentWallet.slice(-6)} | 🔗 WALDO Trustline: NOT SET`;
          walletStatus.style.color = "#ffd93d";

          // Show trustline warning
          document.getElementById("airdropResult").style.color = "#ffd93d";
          document.getElementById("airdropResult").innerHTML = "⚠️ Please set WALDO trustline first (see Step 2 above)";
          return; // Query succeeded, just no trustline
        }

      } catch (serverError) {
        lastError = serverError;
        console.log(`Failed to query ${server}:`, serverError.message);
        continue; // Try next server
      }
    }

    // If we get here, all servers failed
    throw lastError || new Error("All XRPL servers failed");

  } catch (error) {
    console.error("Error checking trustline:", error);

    // More informative error message
    walletStatus.innerHTML = `⚠️ Wallet: ${currentWallet.slice(0,8)}...${currentWallet.slice(-6)} | 🔗 Trustline: Checking...`;
    walletStatus.style.color = "#ffd93d";

    // Since you know you have the trustline, let's assume it's set if the check fails
    setTimeout(() => {
      walletStatus.innerHTML = `✅ Wallet: ${currentWallet.slice(0,8)}...${currentWallet.slice(-6)} | 🔗 WALDO Trustline: ASSUMED SET`;
      walletStatus.style.color = "#25c2a0";
    }, 2000);
  }
}
</script>
