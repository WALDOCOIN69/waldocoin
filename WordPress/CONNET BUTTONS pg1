<!-- WALDO Connect/Trustline Custom Block pg1 under presale btn-->
<div class="button-container">
  <button type="button" onclick="openConnectModal()" class="connect-wallet-button" id="connectWalletBtn">
    üîó Connect XAMAN Wallet
  </button>

  <div id="trustlineWarning" class="trustline-warning">
    <h3 class="trustline-warning-title">‚ö†Ô∏è You Need a WALDO Trustline</h3>
    <p class="trustline-desc">
      Before you can receive WALDO rewards, you must add the trustline to your wallet.
    </p>
    <a href="https://xumm.app/detect/trust?issuer=rstjAWDiqKsUMhHqiJShRSkuaZ44TXZyDY&currency=WLO" target="_blank">
      <div class="add-trustline-button">
        üëâ <strong>Click here to add WALDO Trustline in XUMM</strong>
      </div>
    </a>
  </div>

  <button type="button" onclick="window.location.href='https://waldocoin.live/hall-of-fame/'"
    class="hall-of-fame-button">
    üåü WALDO Hall of Fame
  </button>
</div>

<!-- Lightweight Connect Modal -->
<div id="connectModal" class="connect-modal" style="display:none;">
  <div class="connect-modal-backdrop" onclick="closeConnectModal()"></div>
  <div class="connect-modal-content">
    <button class="connect-modal-close" onclick="closeConnectModal()">‚úï</button>
    <h3>üîó Connect Your XAMAN Wallet</h3>
    <div id="connectDesktop">
      <img id="xummQrInline" alt="Scan with XUMM"
        style="display:none; max-width: 280px; border-radius: 10px; box-shadow: 0 0 18px #25c2a055;" />
      <div id="qrLoader" class="loader" style="display:none; margin-top:12px;"></div>
      <p id="connectHint" class="hint" style="display:none; color:#9adbcf; margin-top:10px;">Scan the QR with your XUMM
        app</p>
      <div id="connectErrorInline" class="error" style="color:#ff6b6b; margin-top:10px;"></div>
    </div>
    <div id="connectMobile" style="display:none;">
      <a id="xummDeepLink" class="add-trustline-button" href="#" target="_blank">üëâ Tap to open XUMM and sign in</a>
      <p class="hint" style="color:#9adbcf; margin-top:10px;">Return here after signing to continue</p>
    </div>
    <div id="connectSuccess" style="display:none; text-align:center; padding: 16px 0;">
      <div class="success-check">
        <span class="checkmark">‚úì</span>
      </div>
      <p class="hint" style="margin-top:10px; color:#c6fff0;">Connected! Redirecting‚Ä¶</p>
    </div>

  </div>
</div>


/* Connect Modal Styles - crisp */
.connect-modal { position: fixed; inset: 0; z-index: 9999; }
.connect-modal-backdrop { position: absolute; inset: 0; background: rgba(0,0,0,0.82); backdrop-filter: blur(2px); }
.connect-modal-content { position: relative; margin: 8vh auto; background: #0b0b0b; border: 1px solid #1a1a1a;
border-radius: 16px; padding: 22px; width: min(92vw, 520px); box-shadow: 0 10px 40px rgba(0,0,0,0.55), 0 0 24px
rgba(37,194,160,0.25); }

/* Success check animation */
.success-check{ display:inline-flex; width:64px; height:64px; border-radius:50%; border:2px solid #19e39a;
align-items:center; justify-content:center; box-shadow: 0 0 24px rgba(25,227,154,0.25); animation: pop 450ms ease-out; }
.success-check .checkmark{ color:#19e39a; font-size:34px; font-weight:900; line-height:1; animation: appear 400ms
ease-out; }
@keyframes pop{ 0%{ transform: scale(0.8); opacity:0; } 60%{ transform: scale(1.08); opacity:1; } 100%{ transform:
scale(1); } }
@keyframes appear{ 0%{ opacity:0; transform: translateY(6px); } 100%{ opacity:1; transform: translateY(0); } }
.connect-modal-close { position: absolute; top: 8px; right: 8px; background: transparent; border: none; color: #a5e8d9;
font-size: 18px; cursor: pointer; }
.connect-modal h3 { margin: 4px 0 12px 0; color: #c6fff0; font-size: 18px; font-weight: 700; letter-spacing: 0.3px;
text-transform: uppercase; }
#xummQrInline { border: 1px solid #1f3b35; box-shadow: 0 0 0 6px rgba(37,194,160,0.05), 0 0 0 1px rgba(37,194,160,0.18),
0 12px 30px rgba(0,0,0,0.45); }
.add-trustline-button { background: linear-gradient(90deg, #25c2a0, #19e39a); box-shadow: 0 6px 18px rgba(25, 227, 154,
0.25); color: #07120f; font-weight: 800; border: none; }
.add-trustline-button:hover { filter: brightness(1.05); transform: translateY(-1px); box-shadow: 0 10px 26px rgba(25,
227, 154, 0.32); }
.hint { font-size: 13px; opacity: 0.9; }
.loader { border: 4px solid #1c1c1c; border-top: 4px solid #25c2a0; border-radius: 50%; width: 32px; height: 32px;
animation: spin 1s linear infinite; margin: 10px auto 0; }
@keyframes spin { 0% { transform: rotate(0deg);} 100% { transform: rotate(360deg);} }

<style>
  .button-container {
    display: flex;
    flex-direction: column;
    align-items: center;

    gap: 25px;
    margin-top: 60px;
  }

  .connect-wallet-button {
    background: #00c853;
    color: black;
    font-weight: bold;
    font-size: 20px;
    padding: 16px 30px;
    border: none;
    border-radius: 10px;
    cursor: pointer;
  }

  .hall-of-fame-button {
    background: gold;
    color: black;
    font-weight: bold;
    font-size: 18px;
    padding: 14px 26px;
    border-radius: 10px;
    border: none;
    cursor: pointer;
  }

  .trustline-warning {
    display: none;
    background: #222;
    padding: 25px;
    border: 2px dashed #e63e3e;
    border-radius: 12px;
    text-align: center;
    max-width: 500px;
  }

  .trustline-warning-title {
    color: #e63e3e;
    font-size: 22px;
    margin-bottom: 12px;
  }

  .trustline-desc {
    font-size: 16px;
    margin-bottom: 14px;
  }

  .add-trustline-button {
    background: #e63e3e;
    color: white;
    padding: 14px 24px;
    font-size: 16px;
    border-radius: 8px;
    display: inline-block;
    transition: transform 0.2s;
    cursor: pointer;
  }

  .add-trustline-button:hover {
    transform: scale(1.05);
  }

  .connect-wallet-button {
    background: #00c853;
    color: black;
    font-weight: bold;
    font-size: 20px;
    padding: 16px 30px;
    border: none;
    border-radius: 10px;
    cursor: pointer;
    box-shadow: 0 0 10px #00c85355;
    transition:
      background 0.2s,
      box-shadow 0.2s,
      transform 0.12s;
    outline: none;
  }

  .connect-wallet-button:hover,
  .connect-wallet-button:focus {
    background: #25c2a0;
    color: white;
    box-shadow: 0 0 18px #25c2a0aa;
    transform: scale(1.04);
  }

  .hall-of-fame-button {
    background: gold;
    color: black;
    font-weight: bold;
    font-size: 18px;
    padding: 14px 26px;
    border-radius: 10px;
    border: none;
    cursor: pointer;
    box-shadow: 0 0 10px #ffd70055;
    transition:
      background 0.2s,
      box-shadow 0.2s,
      transform 0.12s;
    outline: none;
  }

  .hall-of-fame-button:hover,
  .hall-of-fame-button:focus {
    background: #fffbe3;
    color: #e63e3e;
    box-shadow: 0 0 18px gold;
    transform: scale(1.04);
  }
</style>

<script>
  async function checkTrustline(wallet) {
    const res = await fetch(
      `https://waldocoin-backend-api.onrender.com/api/login/trustline-check?wallet=${wallet}`
    );
    const data = await res.json();
    if (data.hasWaldoTrustline === false) {
      document.getElementById("trustlineWarning").style.display = "block";
    }
  }

  // Modal logic
  const baseURL = "https://waldocoin-backend-api.onrender.com";
  const DASHBOARD_URL = "https://stats-page.waldocoin.live/";

  function isMobileDevice() { return /iphone|android|ipad|mobile/i.test(navigator.userAgent); }

  async function openConnectModal() {
    const modal = document.getElementById('connectModal');
    const qr = document.getElementById('xummQrInline');
    const loader = document.getElementById('qrLoader');
    const hint = document.getElementById('connectHint');
    const err = document.getElementById('connectErrorInline');
    const deepLink = document.getElementById('xummDeepLink');
    const mobile = document.getElementById('connectMobile');
    const desktop = document.getElementById('connectDesktop');

    modal.style.display = 'block';
    err.textContent = '';
    qr.style.display = 'none';
    loader.style.display = 'block';
    hint.style.display = 'none';
    mobile.style.display = 'none';
    desktop.style.display = 'block';

    try {
      const res = await fetch(`${baseURL}/api/login`);
      const { qr: qrUrl, uuid, refs } = await res.json();

      if (isMobileDevice()) {
        // Mobile: show deep link instead of QR
        desktop.style.display = 'none';
        mobile.style.display = 'block';
        const link = refs?.qr_uri ? refs.qr_uri : `https://xumm.app/sign/${uuid}`;
        deepLink.href = link;
      } else {
        // Desktop: show QR
        qr.src = qrUrl;
        qr.style.display = 'block';
        hint.style.display = 'block';
      }

      // Start polling for login status
      pollLoginStatus(uuid);
    } catch (e) {
      err.textContent = 'üö® Could not load XUMM login. Please try again.';
    } finally {
      loader.style.display = 'none';
    }
  }
  function closeConnectModal() {
    const modal = document.getElementById('connectModal');
    modal.style.display = 'none';
  }

  function setLoginAndRedirect(wallet) {
    try {
      localStorage.setItem('xummWallet', wallet);
    } catch (e) { }
    try { closeConnectModal(); } catch (e) { }
    setTimeout(() => { window.location.href = DASHBOARD_URL; }, 250);
  }

  function pollLoginStatus(uuid) {
    const statusURL = `${baseURL}/api/login/status?uuid=${uuid}`;
    let attempts = 0; const maxAttempts = 120;
    const timer = setInterval(async () => {
      try {
        const res = await fetch(statusURL + `&_t=${Date.now()}`);
        const data = await res.json();
        if (data.signed && (data.account || data.wallet)) {
          clearInterval(timer);
          // Show success animation briefly before redirect
          try {
            document.getElementById('connectDesktop').style.display = 'none';
            document.getElementById('connectMobile').style.display = 'none';
            const success = document.getElementById('connectSuccess');
            if (success) success.style.display = 'block';
          } catch (e) { }
          setTimeout(() => setLoginAndRedirect(data.account || data.wallet), 600);
        }
        attempts++;
        if (attempts >= maxAttempts) { clearInterval(timer); }
      } catch (err) { clearInterval(timer); }
    }, 1000);
  }

  document.addEventListener("DOMContentLoaded", function () {
    try {
      const wallet = localStorage.getItem("xummWallet");
      if (wallet) {
        checkTrustline(wallet);
      }
    } catch (e) { }
  });
</script>