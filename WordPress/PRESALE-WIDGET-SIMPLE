<!-- WALDO Presale Widget - SIMPLE WORKING VERSION -->
<div
    style="background:#0d2818; padding: 30px; border-radius: 15px; border: 2px solid #25c2a0; max-width: 600px; margin: 20px auto;">

    <h1 style="color: #25c2a0; text-align: center; margin: 0 0 20px 0;">üöÄ WALDO PRESALE</h1>

    <!-- Step 1: Connect Wallet -->
    <div id="step1-connect">
        <h3 style="color: #ffea00; text-align: center;">Step 1: Connect Your Wallet</h3>

        <div style="text-align: center; margin: 20px 0;">
            <div id="qrPlaceholder"
                style="display: flex; align-items: center; justify-content: center; min-height: 200px; background: #0f2d17; border: 2px dashed #25c2a0; border-radius: 10px; color: #25c2a0; font-weight: bold;">
                Loading QR Code...
            </div>
            <img id="xummQR" style="display: none; max-width: 100%; border-radius: 10px; margin: 10px auto;" />
            <a id="xummDeepLink"
                style="display: none; color: #25c2a0; font-weight: bold; margin-top: 10px; text-align: center; display: block;"
                target="_blank">üì± Open in XAMAN App</a>
        </div>

        <div style="background: #0f2d17; padding: 10px; border-radius: 8px; margin: 15px 0;">
            <div style="color: #25c2a0; font-size: 12px; font-weight: bold;">Wallet Status</div>
            <div style="color: white; font-size: 11px;">
                Connected: <span id="connectedWallet">Not connected</span><br>
                Status: <span id="connectionStatus">Generating QR...</span>
            </div>
            <button id="disconnectBtn" onclick="disconnectWallet()"
                style="background: #e74c3c; color: white; border: none; padding: 4px 8px; border-radius: 4px; font-size: 10px; margin-top: 5px; cursor: pointer; display: none;">üîå
                Disconnect</button>
        </div>
    </div>

    <!-- Step 2: Trustline QR -->
    <div id="step2-trustline" style="display: none;">
        <h3 style="color: #ffea00; text-align: center;">Step 2: Add WALDO Trustline</h3>
        <p style="color: white; text-align: center;">Scan QR code to add WALDO trustline</p>

        <div style="text-align: center; margin: 20px 0;">
            <div id="trustlineQRPlaceholder"
                style="display: flex; align-items: center; justify-content: center; min-height: 200px; background: #0f2d17; border: 2px dashed #ffd93d; border-radius: 10px; color: #ffd93d; font-weight: bold;">
                Loading Trustline QR...
            </div>
            <img id="trustlineQR" style="display: none; max-width: 100%; border-radius: 10px; margin: 10px auto;" />
            <a id="trustlineDeepLink"
                style="display: none; color: #ffd93d; font-weight: bold; margin-top: 10px; text-align: center; display: block;"
                target="_blank">üì≤ Add Trustline in XAMAN</a>
        </div>

        <div style="background: #0f2d17; padding: 10px; border-radius: 8px; margin: 15px 0;">
            <div style="color: #ffd93d; font-size: 12px; font-weight: bold;">Trustline Status</div>
            <div style="color: white; font-size: 11px;">
                Status: <span id="trustlineStatus">Waiting for trustline...</span>
            </div>
        </div>
    </div>

    <!-- Step 3: Purchase -->
    <div id="step3-purchase" style="display: none;">
        <h3 style="color: #ffea00; text-align: center;">Step 3: Purchase WALDO</h3>
        <p style="color: white; text-align: center; margin: 10px 0;">Buy in <strong>5 XRP increments only</strong><br>üî•
            Bonus WALDO at 80 XRP and above!</p>

        <!-- Presale Progress -->
        <div id="presaleProgress"
            style="margin: 15px 0; padding: 10px; background: #0f2d17; border: 1px solid #1a4d2e; border-radius: 8px;">
            <div style="color: #25c2a0; font-size: 12px; font-weight: bold; margin-bottom: 5px;">Presale Progress</div>
            <div id="progressText" style="color: white; font-size: 11px;">Loading...</div>
        </div>

        <!-- Amount Selection -->
        <div style="margin-bottom: 15px;">
            <label
                style="color: white; font-weight: bold; display: block; margin-bottom: 10px; text-align: center;">Select
                XRP Amount:</label>
            <div style="display: grid; grid-template-columns: repeat(auto-fit, minmax(70px, 1fr)); gap: 8px;">
                <button onclick="selectAmount(5)"
                    style="background: #1a4d2e; color: white; border: 2px solid #25c2a0; padding: 10px; border-radius: 8px; cursor: pointer; font-weight: bold; font-size: 12px;">5
                    XRP</button>
                <button onclick="selectAmount(10)"
                    style="background: #1a4d2e; color: white; border: 2px solid #25c2a0; padding: 10px; border-radius: 8px; cursor: pointer; font-weight: bold; font-size: 12px;">10
                    XRP</button>
                <button onclick="selectAmount(15)"
                    style="background: #1a4d2e; color: white; border: 2px solid #25c2a0; padding: 10px; border-radius: 8px; cursor: pointer; font-weight: bold; font-size: 12px;">15
                    XRP</button>
                <button onclick="selectAmount(20)"
                    style="background: #1a4d2e; color: white; border: 2px solid #25c2a0; padding: 10px; border-radius: 8px; cursor: pointer; font-weight: bold; font-size: 12px;">20
                    XRP</button>
                <button onclick="selectAmount(25)"
                    style="background: #1a4d2e; color: white; border: 2px solid #25c2a0; padding: 10px; border-radius: 8px; cursor: pointer; font-weight: bold; font-size: 12px;">25
                    XRP</button>
                <button onclick="selectAmount(30)"
                    style="background: #1a4d2e; color: white; border: 2px solid #25c2a0; padding: 10px; border-radius: 8px; cursor: pointer; font-weight: bold; font-size: 12px;">30
                    XRP</button>
                <button onclick="selectAmount(40)"
                    style="background: #1a4d2e; color: white; border: 2px solid #25c2a0; padding: 10px; border-radius: 8px; cursor: pointer; font-weight: bold; font-size: 12px;">40
                    XRP</button>
                <button onclick="selectAmount(50)"
                    style="background: #1a4d2e; color: white; border: 2px solid #25c2a0; padding: 10px; border-radius: 8px; cursor: pointer; font-weight: bold; font-size: 12px;">50
                    XRP</button>
                <button onclick="selectAmount(80)"
                    style="background: #1a4d2e; color: white; border: 2px solid #ffd93d; padding: 10px; border-radius: 8px; cursor: pointer; font-weight: bold; font-size: 12px;">80
                    XRP<br><small style="color: #ffd93d;">+15% BONUS</small></button>
                <button onclick="selectAmount(90)"
                    style="background: #1a4d2e; color: white; border: 2px solid #ffd93d; padding: 10px; border-radius: 8px; cursor: pointer; font-weight: bold; font-size: 12px;">90
                    XRP<br><small style="color: #ffd93d;">+22% BONUS</small></button>
                <button onclick="selectAmount(100)"
                    style="background: #1a4d2e; color: white; border: 2px solid #ff6b6b; padding: 10px; border-radius: 8px; cursor: pointer; font-weight: bold; font-size: 12px;">100
                    XRP<br><small style="color: #ff6b6b;">+30% BONUS</small></button>
            </div>
        </div>

        <!-- Purchase Summary -->
        <div id="purchaseSummary"
            style="display: none; background: #0f2d17; padding: 15px; border: 2px solid #25c2a0; border-radius: 10px; margin: 15px 0;">
            <div style="color: #25c2a0; font-size: 14px; font-weight: bold; margin-bottom: 10px;">Purchase Summary</div>
            <div id="summaryText" style="color: white; font-size: 12px; line-height: 1.4;"></div>
        </div>

        <button id="purchaseBtn" onclick="purchaseWaldo()" disabled
            style="width: 100%; background: #25c2a0; color: white; border: none; padding: 15px; border-radius: 10px; font-size: 16px; font-weight: bold; cursor: pointer; opacity: 0.5; min-height: 50px; box-sizing: border-box;">üîê
            Select Amount to Purchase</button>
    </div>
</div>

<script>
    let selectedAmount = 0;
    let connectedWallet = null;
    let hasTrustline = false;

    function showStep(stepNumber) {
        document.getElementById('step1-connect').style.display = stepNumber === 1 ? 'block' : 'none';
        document.getElementById('step2-trustline').style.display = stepNumber === 2 ? 'block' : 'none';
        document.getElementById('step3-purchase').style.display = stepNumber === 3 ? 'block' : 'none';
    }

    // SIMPLE connection function
    async function connectXummWallet() {
        try {
            document.getElementById('qrPlaceholder').innerText = 'Loading QR...';
            document.getElementById('xummQR').style.display = 'none';

            const response = await fetch('https://waldocoin-backend-api.onrender.com/api/login');
            const data = await response.json();

            if (data.qr && data.uuid) {
                document.getElementById('xummQR').src = data.qr;
                document.getElementById('xummQR').style.display = 'block';
                document.getElementById('qrPlaceholder').style.display = 'none';

                if (data.next && data.next.always) {
                    document.getElementById('xummDeepLink').href = data.next.always;
                    document.getElementById('xummDeepLink').style.display = 'block';
                }

                // Simple polling every 2 seconds
                const pollInterval = setInterval(async () => {
                    try {
                        const statusResponse = await fetch('https://waldocoin-backend-api.onrender.com/api/login/status?uuid=' + data.uuid);
                        const statusData = await statusResponse.json();

                        if (statusData.signed && statusData.account) {
                            clearInterval(pollInterval);
                            connectedWallet = statusData.account;

                            document.getElementById('connectedWallet').innerText = connectedWallet;
                            document.getElementById('connectionStatus').innerText = 'Connected!';
                            document.getElementById('connectionStatus').style.color = '#25c2a0';
                            document.getElementById('disconnectBtn').style.display = 'inline-block';

                            checkTrustlineAndProceed();
                        }
                    } catch (error) {
                        console.error('Polling error:', error);
                    }
                }, 2000);

                // Stop polling after 2 minutes
                setTimeout(() => clearInterval(pollInterval), 120000);
            }
        } catch (error) {
            document.getElementById('qrPlaceholder').innerHTML = 'Failed to load<br><button onclick="connectXummWallet()" style="background: #25c2a0; color: white; border: none; padding: 5px 10px; border-radius: 5px; cursor: pointer;">Try Again</button>';
        }
    }

    async function checkTrustlineAndProceed() {
        try {
            const hasWaldoTrustline = await checkTrustlineDirectXRPL(connectedWallet);

            if (hasWaldoTrustline) {
                hasTrustline = true;
                showStep(3);
                loadPresaleProgress();
            } else {
                showStep(2);
                loadTrustlineQR(); // Load trustline QR immediately
            }
        } catch (error) {
            showStep(2);
            loadTrustlineQR(); // Load trustline QR on error too
        }
    }

    async function checkTrustlineDirectXRPL(wallet) {
        const servers = ['https://xrplcluster.com', 'https://s1.ripple.com:51234'];

        for (const server of servers) {
            try {
                const response = await fetch(server, {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({
                        method: 'account_lines',
                        params: [{
                            account: wallet,
                            ledger_index: 'validated'
                        }]
                    })
                });

                const data = await response.json();
                if (data.result && data.result.lines) {
                    const waldoTrustline = data.result.lines.find(line =>
                        line.account === 'rstjAWDiqKsUMhHqiJShRSkuaZ44TXZyDY' && line.currency === 'WLO'
                    );
                    return !!waldoTrustline;
                }
            } catch (error) {
                continue;
            }
        }
        return false;
    }

    // Load trustline QR code and start automatic polling
    async function loadTrustlineQR() {
        try {
            document.getElementById('trustlineQRPlaceholder').innerText = 'Loading Trustline QR...';
            document.getElementById('trustlineQR').style.display = 'none';
            document.getElementById('trustlineStatus').innerText = 'Loading QR code...';

            const response = await fetch('https://waldocoin-backend-api.onrender.com/api/login/trustline');
            const data = await response.json();

            if (data.qr && data.uuid) {
                document.getElementById('trustlineQR').src = data.qr;
                document.getElementById('trustlineQR').style.display = 'block';
                document.getElementById('trustlineQRPlaceholder').style.display = 'none';
                document.getElementById('trustlineStatus').innerText = 'Scan QR to add trustline...';

                if (data.next && data.next.always) {
                    document.getElementById('trustlineDeepLink').href = data.next.always;
                    document.getElementById('trustlineDeepLink').style.display = 'block';
                }

                // Start polling for trustline completion
                pollForTrustlineCompletion(data.uuid);
            } else {
                // Fallback: poll wallet directly
                startDirectTrustlinePolling();
            }
        } catch (error) {
            console.error('Error loading trustline QR:', error);
            startDirectTrustlinePolling();
        }
    }

    // Poll for trustline transaction completion via UUID
    function pollForTrustlineCompletion(uuid) {
        console.log('üîÑ Polling for trustline completion...');

        const pollInterval = setInterval(async () => {
            try {
                const response = await fetch('https://waldocoin-backend-api.onrender.com/api/login/status?uuid=' + uuid);
                const data = await response.json();

                if (data.signed || data.completed) {
                    clearInterval(pollInterval);
                    document.getElementById('trustlineStatus').innerText = 'Trustline added! Proceeding...';
                    document.getElementById('trustlineStatus').style.color = '#25c2a0';

                    // Verify trustline and proceed
                    setTimeout(async () => {
                        const hasWaldoTrustline = await checkTrustlineDirectXRPL(connectedWallet);
                        if (hasWaldoTrustline) {
                            hasTrustline = true;
                            showStep(3);
                            loadPresaleProgress();
                        }
                    }, 2000);
                }
            } catch (error) {
                console.error('Trustline polling error:', error);
            }
        }, 2000);

        // Stop polling after 2 minutes
        setTimeout(() => clearInterval(pollInterval), 120000);
    }

    // Direct wallet polling (fallback)
    function startDirectTrustlinePolling() {
        console.log('üîÑ Starting direct wallet trustline polling...');
        document.getElementById('trustlineStatus').innerText = 'Waiting for trustline...';
        document.getElementById('trustlineQRPlaceholder').innerHTML =
            '<a href="https://xumm.app/detect/xumm:trustline?issuer=rstjAWDiqKsUMhHqiJShRSkuaZ44TXZyDY&currency=WLO" target="_blank" style="color: #ffd93d; text-decoration: none; font-weight: bold;">üì≤ Add Trustline in XAMAN</a>';

        const pollInterval = setInterval(async () => {
            try {
                const hasWaldoTrustline = await checkTrustlineDirectXRPL(connectedWallet);

                if (hasWaldoTrustline) {
                    clearInterval(pollInterval);
                    document.getElementById('trustlineStatus').innerText = 'Trustline detected! Proceeding...';
                    document.getElementById('trustlineStatus').style.color = '#25c2a0';

                    hasTrustline = true;
                    setTimeout(() => {
                        showStep(3);
                        loadPresaleProgress();
                    }, 1000);
                }
            } catch (error) {
                console.error('Direct trustline polling error:', error);
            }
        }, 3000);

        // Stop polling after 3 minutes
        setTimeout(() => clearInterval(pollInterval), 180000);
    }

    function selectAmount(amount) {
        selectedAmount = amount;

        // Update button styles
        document.querySelectorAll('button[onclick^="selectAmount"]').forEach(btn => {
            btn.style.background = '#1a4d2e';
        });
        event.target.style.background = '#25c2a0';

        // Calculate WALDO amount - 1 XRP = 10,000 WALDO
        let waldoAmount = amount * 10000;
        let bonus = 0;

        if (amount >= 80 && amount < 90) bonus = 15;
        if (amount >= 90 && amount < 100) bonus = 22;
        if (amount >= 100) bonus = 30;

        if (bonus > 0) {
            waldoAmount = waldoAmount * (1 + bonus / 100);
        }

        // Show summary
        document.getElementById('summaryText').innerHTML =
            'XRP Amount: ' + amount + ' XRP<br>' +
            'WALDO Amount: ' + waldoAmount.toLocaleString() + ' WALDO' +
            (bonus > 0 ? '<br>Bonus: +' + bonus + '%' : '');

        document.getElementById('purchaseSummary').style.display = 'block';
        document.getElementById('purchaseBtn').disabled = false;
        document.getElementById('purchaseBtn').style.opacity = '1';
        document.getElementById('purchaseBtn').innerText = 'üîê Buy ' + waldoAmount.toLocaleString() + ' WALDO';
    }

    async function loadPresaleProgress() {
        try {
            const response = await fetch('https://waldocoin-backend-api.onrender.com/api/presale/total-sold');
            const data = await response.json();

            if (data.success) {
                const totalXRP = data.totalXRP || 0;
                const totalWaldo = data.totalWaldo || 0;
                const totalPurchases = data.totalPurchases || 0;

                document.getElementById('progressText').innerHTML =
                    'Total Raised: ' + totalXRP.toLocaleString() + ' XRP<br>' +
                    'WALDO Sold: ' + totalWaldo.toLocaleString() + ' WALDO<br>' +
                    'Total Purchases: ' + totalPurchases;
            } else {
                document.getElementById('progressText').innerText = 'Progress data unavailable';
            }
        } catch (error) {
            document.getElementById('progressText').innerText = 'Progress data unavailable';
        }
    }

    async function purchaseWaldo() {
        if (!selectedAmount || !connectedWallet) return;

        try {
            document.getElementById('purchaseBtn').innerText = 'Creating transaction...';
            document.getElementById('purchaseBtn').disabled = true;

            const response = await fetch('https://waldocoin-backend-api.onrender.com/api/presale/buy', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({
                    wallet: connectedWallet,
                    xrpAmount: selectedAmount
                })
            });

            const data = await response.json();

            if (data.success && data.deeplink) {
                document.getElementById('purchaseBtn').innerText = '‚úÖ Check XUMM App';
                window.open(data.deeplink, '_blank');

                if (data.uuid) {
                    // Poll for transaction completion
                    const pollInterval = setInterval(async () => {
                        try {
                            const statusResponse = await fetch('https://waldocoin-backend-api.onrender.com/api/presale/status/' + data.uuid);
                            const statusData = await statusResponse.json();

                            if (statusData.completed) {
                                clearInterval(pollInterval);
                                window.location.href = 'https://waldocoin.live/presale-success/';
                            }
                        } catch (error) {
                            console.error('Status polling error:', error);
                        }
                    }, 3000);
                }
            } else {
                throw new Error('Purchase failed');
            }
        } catch (error) {
            document.getElementById('purchaseBtn').innerText = '‚ùå Purchase Failed';
            document.getElementById('purchaseBtn').disabled = false;
            setTimeout(() => {
                document.getElementById('purchaseBtn').innerText = 'üîê Try Again';
            }, 3000);
        }
    }

    function disconnectWallet() {
        connectedWallet = null;
        hasTrustline = false;
        selectedAmount = 0;
        showStep(1);
        connectXummWallet();
    }

    // Initialize
    document.addEventListener('DOMContentLoaded', function () {
        showStep(1);
        connectXummWallet();
    });
</script>